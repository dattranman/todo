// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	store "github.com/dattranman/todo/store"
	mock "github.com/stretchr/testify/mock"
)

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// Task provides a mock function with given fields:
func (_m *Store) Task() store.TaskStore {
	ret := _m.Called()

	var r0 store.TaskStore
	if rf, ok := ret.Get(0).(func() store.TaskStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.TaskStore)
		}
	}

	return r0
}

type mockConstructorTestingTNewStore interface {
	mock.TestingT
	Cleanup(func())
}

// NewStore creates a new instance of Store. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStore(t mockConstructorTestingTNewStore) *Store {
	mock := &Store{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
